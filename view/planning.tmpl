{{define "Head"}}
<title>Planning</title>
<link rel="stylesheet" href="/static/planning.css" />
{{end}}

{{define "Body"}}
    <div class="container">
        <div id="calendar">
            <div id="header">
                <p id="displayDate"></p>
                <div class="command">
                    <button type="button" class="btn btn-outline" data-command="Prev" onclick="onChangeMonth(this)">
                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <polyline points="15 18 9 12 15 6"></polyline>
                    </svg>
                    </button>
                    <button type="button" class="btn btn-outline" data-command="Next" onclick="onChangeMonth(this)">
                        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                            <polyline points="9 18 15 12 9 6"></polyline>
                        </svg>
                    </button>
                </div>
            </div>
            <div id="container">
                <div id="daysNames">
                  <p class="name">Lu</p>
                  <p class="name">Ma</p>
                  <p class="name">Me</p>
                  <p class="name">Je</p>
                  <p class="name">Ve</p>
                  <p class="name">Sa</p>
                  <p class="name">Di</p>
                </div>
                <div id="days"></div>
            </div>
            <input type="date" name="date" id="date" />
        </div>
        {{template "Planning" .}}
    </div>
    <script>
        const dateInput = document.getElementById("#planning-date")

        const days = document.getElementById("days")
        const currentDate = document.getElementById("displayDate")
        const inputDate = document.getElementById("date")
        
        const month_names = ["Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Septembre", "Octobre", "Novembre", "Décembre"]
        
        const date = new Date()
        let selectedDate = new Date()
        let currentMonth = date.getMonth()

        const init = ()=>{
            date.setDate(1)
            currentDate.innerHTML = `${month_names[date.getMonth()]} ${date.getFullYear()}`
            
            const [day, month, year] = selectedDate.toLocaleDateString("fr-FR", {year: "numeric", month: "2-digit", day: "2-digit"}).split("/")
            inputDate.value = `${year}-${month}-${day}`
            let arrayOfDays = new Array(7*5).fill(0)
            updateDays()
        }
        
        const updateDays = ()=>{
            currentDate.innerHTML = `${month_names[date.getMonth()]} ${date.getFullYear()}`
            const startOfTheWeek = date.getDay() === 0 ? 6 : date.getDay() - 1
            if(startOfTheWeek > 5) arrayOfDays = new Array(7*6).fill(0)
            else arrayOfDays = new Array(7*5).fill(0)
            date.setDate(date.getDate() - startOfTheWeek)
            days.innerHTML = ""
            for(let i = 0; i < arrayOfDays.length; i++){
                days.innerHTML += `<button type="button" class="dayBtn btn-outline ${selectedDate.getMonth() === date.getMonth() && selectedDate.getDate() === date.getDate() && 'selected'}" ${date.getMonth() !== currentMonth ? 'disabled' : ''} onclick="onDaySelect(this)" hx-post="/planning" hx-target="#schedule" hx-ext="json-enc-custom" hx-include="#date" hx-swap="outerHTML">${date.getDate()}</button>`
                date.setDate(date.getDate() + 1)
            }
            htmx.process(document.body)
        }
        
        const onChangeMonth = (ele)=>{
            if(ele.dataset.command === "Next"){
                date.setMonth(currentMonth === 11 ? currentMonth + 1 - 12 : currentMonth + 1, 1)
            }else{
                date.setMonth(currentMonth - 1, 1)
            }
            currentMonth = date.getMonth()
            updateDays()
        }
        
        const onDaySelect = (ele)=>{
            selectedDate.setMonth(currentMonth, parseInt(ele.innerHTML))
            const buttons = document.querySelectorAll(".dayBtn")
            for(const btn of buttons){
              btn.classList.remove("selected")
            }
            ele.classList.add("selected")
            const [day, month, year] = selectedDate.toLocaleDateString("fr-FR", {year: "numeric", month: "2-digit", day: "2-digit"}).split("/")
            inputDate.value = `${year}-${month}-${day}`
        }
        
        init()

    </script>
{{end}}
