{{define "Head"}}
    <title>Recherche</title>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
     integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
     crossorigin=""></script>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
     integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
     crossorigin=""/>
<style>
@import "/static/etablishment_card.css";
#map{
  /* configure the size of the map */
  height: 350px;
  z-index: 0;
  margin: 1rem auto;
  max-width: 1200px;
  border-radius: 10px;
}
#map *{
    color: black;
}
#searchZoneBtn{
      position: absolute;
      top: 5.5rem;
      left: 20%;
      width: 60%;
      height: 2rem;
      background-color: white;
      border-radius: 25px;
      color: black;
}
#etablishment{
    max-width: 1200px;
    margin: 0 auto;
    display: grid;
    gap: 1rem;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
}

</style>
{{end}}

{{define "Body"}}
    <div id="map"></div>
    <button type="button" onclick="onSearchZone()" id="searchZoneBtn">Recherche dans la zone</button>
    <div id="etablishment">
        {{range .Etablishment}}
            {{template "EtablishmentCard" .}}
        {{end}}
    </div>
    <script>
        // initialize Leaflet
        const zoneBtn = document.getElementById("searchZoneBtn")
        let etablishmentMarkers = []
        var map = L.map('map').setView([{{.NavbarData.Latitude}}, {{.NavbarData.Longitude}}], 13);
        // add the OpenStreetMap tiles
        L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
          maxZoom: 19,
          attribution: '&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'
        }).addTo(map);
        var circle = L.circle([{{.NavbarData.Latitude}}, {{.NavbarData.Longitude}}], {
            color: '#BEE9E8',
            fillColor: '#62B6CB',
            fillOpacity: 0.4,
            radius: {{.NavbarData.Radius}} * 1000
        }).addTo(map);
        {{range .Etablishment}}
            etablishmentMarkers.push(L.marker([{{.Lat}},{{.Lon}}]).addTo(map).bindPopup("Marker popup"));
        {{end}}

        const onSearchZone = async ()=>{
            const etablishmentContainer = document.getElementById("etablishment")
            const query = document.getElementById("query")
            map.removeLayer(circle)
            circle = L.circle([map.getCenter().lat, map.getCenter().lng], {
                color: '#BEE9E8',
                fillColor: '#62B6CB',
                fillOpacity: 0.4,
                radius: 2000
            }).addTo(map);
            let queryString = query.value
            if(!queryString){
                queryString = "{{.NavbarData.Query}}"
            }
            const fetchZone = await fetch(`http://localhost:8000/recherche`, {
                method: "POST",
                headers: [["Content-Type", "application/json"]],
                body: JSON.stringify({query: `${queryString}`, lat: `${map.getCenter().lat}`, lon: `${map.getCenter().lng}`, radius: "2"})
            })
            const resultZone = await fetchZone.json()
            if(!resultZone) return
            etablishmentContainer.innerHTML = ""
            for(const mrk of etablishmentMarkers){
                map.removeLayer(mrk)
            }
            etablishmentMarkers = []
            let nextshift
            for(const d of resultZone){
                etablishmentMarkers.push(L.marker([d.lat, d.lon]).addTo(map).bindPopup("Marker popup"));
                if(d.NextShift === "Fermé Temporairement"){
                    nextshift = `<span style="color:var(--warning-btn-color-hover)" class="status">${d.NextShift}</span> `
                }else{
                    nextshift = `
                        <span style="color:${d.IsOpen === 'Fermé' ? "var(--warning-btn-color-hover)" :"green"}" class="status">${d.IsOpen}</span> 
                        <span style="display:flex;align-items:center;">
                            <svg viewBox="0 0 24 24" style="height:1.5rem;" fill="none"><circle cx="12" cy="12" r="2" fill="var(--text-color-helper)"></circle></svg> 
                            ${d.NextShift}
                        </span>
                    `
                }
                etablishmentContainer.innerHTML += `
<div class="etab_card">
    <img src="https://picsum.photos/150" class="preview" />
    <div class="content">
        <a href="/etablissement/${d.Id}" class="detail">
            <h2 class="title">${d.name}</h2>
            <span class="category">${d.category}</span>
            <div class="metadata" style="margin-bottom:5px;">
                <svg class="icon" viewBox="0 0 33.866664 33.866682">
                      <g
                         id="layer1"
                         transform="translate(-78.394371,-112.55541)">
                        <circle
                           style="fill:none;stroke:var(--text-color);stroke-width:2.43843;stroke-dasharray:none;stroke-opacity:1"
                           cx="95.327705"
                           cy="129.48874"
                           r="15.184959" />
                        <rect
                           style="fill:none;stroke:var(--text-color);stroke-width:2.34762;stroke-dasharray:none;stroke-opacity:1"
                           width="0.33770394"
                           height="9.5379772"
                           x="95.158867"
                           y="120.0871"
                           ry="0.083666474" />
                        <rect
                           style="fill:none;stroke:var(--text-color);stroke-width:2.04988;stroke-dasharray:none;stroke-opacity:1"
                           width="0.29440054"
                           height="8.341773"
                           x="33.80965"
                           y="-168.17717"
                           ry="0.073173441"
                           inkscape:transform-center-y="2.5311686"
                           transform="matrix(-0.72187665,0.69202175,-0.74856193,-0.66306488,0,0)"
                           inkscape:transform-center-x="-2.8575292" />
                      </g>
                </svg>
                <div style="display:flex;align-items:center;">
                    ${nextshift}
                </div>
            </div>
            <div class="metadata">
                <svg class="icon" viewBox="-4 0 32 32" version="1.1">
                          <g id="Page-1" stroke="none" stroke-width="2" fill="none" fill-rule="evenodd" sketch:type="MSPage">
                              <g id="Icon-Set" sketch:type="MSLayerGroup" transform="translate(-104.000000, -411.000000)" fill="var(--text-color)">
                                  <path d="M116,426 C114.343,426 113,424.657 113,423 C113,421.343 114.343,420 116,420 C117.657,420 119,421.343 119,423 C119,424.657 117.657,426 116,426 L116,426 Z M116,418 C113.239,418 111,420.238 111,423 C111,425.762 113.239,428 116,428 C118.761,428 121,425.762 121,423 C121,420.238 118.761,418 116,418 L116,418 Z M116,440 C114.337,440.009 106,427.181 106,423 C106,417.478 110.477,413 116,413 C121.523,413 126,417.478 126,423 C126,427.125 117.637,440.009 116,440 L116,440 Z M116,411 C109.373,411 104,416.373 104,423 C104,428.018 114.005,443.011 116,443 C117.964,443.011 128,427.95 128,423 C128,416.373 122.627,411 116,411 L116,411 Z" id="location" sketch:type="MSShapeGroup"></path>
                              </g>
                          </g>
                      </svg>
              ${d.adresse}, ${d.postal}
            </div>
        </a>
        <div class="footer">
            <a href="/etablissement/${d.Id}/rendez-vous/nouveau" class="appointmentBtn btn-outline">
                <svg class="icon" viewBox="0 0 24 24" fill="none" stroke="var(--text-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                  <line x1="16" y1="2" x2="16" y2="6"></line>
                  <line x1="8" y1="2" x2="8" y2="6"></line>
                  <line x1="3" y1="10" x2="21" y2="10"></line>
                </svg>
                Rendez-vous
            </a>
        </div>
    </div>
</div>
                `
            }
            //htmx.ajax("POST", "/recherche", {
            //    target: "#etablishment", 
            //    headers: {"Content-Type": "application/json"},
            //    handler: ()=>{
            //        etablishments = []
            //        {{range .Etablishment}}
            //            etablishments.push(L.marker([{{.Lat}},{{.Lon}}]).addTo(map).bindPopup("Marker popup"));
            //        {{end}}
            //    }
            //})
        }

    </script>
{{end}}
