{{define "Head"}}
    <title>{{.Etablishment.Name}}</title>
    <link href="/static/my_etablishment.css" rel="stylesheet" >
{{end}}

{{define "Body"}}
    <div class="my-etablishment">
        <div class="header">
            <h1 id="header-title">{{.Etablishment.Name}}</h1>
            <div class="command">
                <a class="btn btn-primary" href="/etablissement/creer">Nouveau</a>
            </div>
        </div>
        <div class="navigation">
            <a href="/etablissement" class="nav-btn selected">Tableau de bord</a>
            <button type="button" class="nav-btn" onclick="onChangeNavigation(this)" hx-get="/etablissement/{{.User.Etablishment}}/rendez-vous" hx-target="#content">Rendez-vous</button>
            <button type="button" class="nav-btn" onclick="onChangeNavigation(this)" hx-get="/etablissement/service" hx-target="#content">Services</button>
            <button type="button" class="nav-btn" onclick="onChangeNavigation(this)" hx-get="/schedule" hx-target="#content">Horaire</button>
            <button type="button" class="nav-btn" onclick="onChangeNavigation(this)" hx-get="/etablissement/employee" hx-target="#content">Employées</button>
            <button type="button" class="nav-btn" onclick="onChangeNavigation(this)" hx-get="/etablissement/parametre" hx-target="#content">Parametre</button>
        </div>

        <div id="content">
            <section class="dashboard-card">
              <div class="dashboard-card-header">
                  <h2 class="header-title">Revenues</h2>
                  <div class="header-action">
                    <button type="button" class="header-btn">Week</button>
                    <button type="button" class="header-btn selected">Mois</button>
                    <button type="button" class="header-btn">Année</button>
                  </div>
                </div>
              <div class="gains">
                  <div class="scale">
                    <div class="rect" style="height:100px;"></div>
                    <a href="#1" style="text-align:center;">Janvier</a>
                  </div>
                  <div class="scale">
                    <div class="rect" style="height: 150px;"></div>
                    <a href="#2" style="text-align:center;">Fevrier</a>
                  </div>
                  <div class="scale">
                    <div class="rect" style="height: 70px;"></div>
                    <a href="#3" style="text-align:center;">Mars</a>
                  </div>
                  <div class="scale">
                    <div class="rect" style="height: 250px;">
                      <span class="amount">220.5k</span>
                    </div>
                    <a href="#4" style="text-align:center;">Avril</a>
                  </div>
                  <div class="scale">
                    <div class="rect" style="height: 20px;">
                      <span class="amount">220.5k</span>
                    </div>
                    <a href="#5" style="text-align:center;">Mai</a>
                  </div>
                  <div class="scale">
                    <div class="rect" style="height: 50px;">
                      <span class="amount">22.5k</span>
                    </div>
                    <a href="#6" style="text-align:center;">Juin</a>
                  </div>
              </div>
            </section>
            <div class="infos">
              <section class="dashboard-card">
                <div class="dashboard-card-header">
                  <h2 class="header-title">Performance</h2>
                  <div class="header-action">
                    <button type="button" class="header-btn" hx-post="/etablissement" hx-vals='{"employeeFilter": "Weekly"}' hx-target="#perf-container"
                    hx-on::after-request="if(event.detail.successful){
                        for(const btn of document.getElementsByClassName('header-btn')){
                            btn.classList.remove('selected')
                        }
                        this.classList.add('selected')
                    }">Week</button>
                    <button type="button" class="header-btn selected" hx-post="/etablissement" hx-vals='{"employeeFilter": "Monthly"}' hx-target="#perf-container"
                    hx-on::after-request="if(event.detail.successful){
                        for(const btn of document.getElementsByClassName('header-btn')){
                            btn.classList.remove('selected')
                        }
                        this.classList.add('selected')
                    }">Mois</button>
                    <button type="button" class="header-btn" hx-post="/etablissement" hx-vals='{"employeeFilter": "Yearly"}' hx-target="#perf-container"
                    hx-on::after-request="if(event.detail.successful){
                        for(const btn of document.getElementsByClassName('header-btn')){
                            btn.classList.remove('selected')
                        }
                        this.classList.add('selected')
                    }">Year</button>
                  </div>
                </div>
                <div id="perf-container">
                {{range .TopEmployee}}
                    <div class="employee-perf">
                    <div class="preview">{{.ShortName}}</div>
                        <div class="content">
                            <h3 class="name">{{.Name}}</h3>
                            <span class="title">Barber</span>
                        </div>
                        <div class="numbers">{{.TotalClient}} Clients</div>
                    </div>
                {{else}}
                    <h3 class="no-data">Aucune performance disponible pour le moment.</h3>
                {{end}}
                </div>
              </section>
              <section class="dashboard-card">
              <h2 class="header-title">Rendez-vous d'aujourd'hui</h2>
                {{range .TodayAppointment}}
                <div class="dashboard-appointment">
                    <div class="preview">JD</div>
                    <div class="content">
                        <h3 class="name">{{.CustomerName}}</h3>
                        <span class="title">{{.Service}}</span>
                    </div>
                    <div class="numbers">{{.Date}}</div>
                </div>
                {{else}}
                    <div class="no-data">
                        <svg class="icon" viewBox="0 0 24 24" fill="none"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M10 13L14 17M14 13L10 17M3 9H21M7 3V5M17 3V5M6.2 21H17.8C18.9201 21 19.4802 21 19.908 20.782C20.2843 20.5903 20.5903 20.2843 20.782 19.908C21 19.4802 21 18.9201 21 17.8V8.2C21 7.07989 21 6.51984 20.782 6.09202C20.5903 5.71569 20.2843 5.40973 19.908 5.21799C19.4802 5 18.9201 5 17.8 5H6.2C5.0799 5 4.51984 5 4.09202 5.21799C3.71569 5.40973 3.40973 5.71569 3.21799 6.09202C3 6.51984 3 7.07989 3 8.2V17.8C3 18.9201 3 19.4802 3.21799 19.908C3.40973 20.2843 3.71569 20.5903 4.09202 20.782C4.51984 21 5.07989 21 6.2 21Z" stroke="var(--text-color)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
                        <h3>Aucun rendez-vous aujourd'hui</h3>
                        <p>Votre agenda est libre pour la journée. Profitez de ce temps pour vous reposer ou planifier vos prochains rendez-vous.</p>
                    </div>
                {{end}}
              </section>
            </div>
            {{/*

            <div class="appointment-status">
                <button type="button" class="appointmentBtn tab_selected" onclick="onTabClick(this)" hx-get="/etablissement/{{.User.Etablishment}}/rendez-vous?type=latest" hx-target="#appointment-cards">A Venir</button>
                <button type="button" class="appointmentBtn" onclick="onTabClick(this)" hx-get="/etablissement/{{.User.Etablishment}}/rendez-vous?type=oldest" hx-target="#appointment-cards">Passée</button>
            </div>
            <div id="appointment-cards">
            </div>
            */}}
        </div>
    </div>

    <script>

        let fetchTimeout
        const navigation = document.querySelectorAll(".navigation .nav-btn")
        const appointment_tabs = document.querySelectorAll(".appointmentBtn")
        const locationSuggest = document.getElementById("location-suggest")
        const etablishmentAdresse = document.getElementById("adr")
        const inputPostal = document.getElementById("postal")
        
        const onFetchLocation = (ele)=>{
            clearTimeout(fetchTimeout)
            fetchTimeout = setTimeout(async()=>{
                const fetchAddr = await fetch(`https://api-adresse.data.gouv.fr/search/?q=${ele.value}&limit=5`)
                const addrJson = await fetchAddr.json()
                if(!addrJson.features) return
                locationSuggest.innerHTML = ""
                for(const addr of addrJson.features){
                    const [lon, lat] = addr.geometry.coordinates
                    locationSuggest.innerHTML += `<button type="button" onclick="onSelectedAdresse(this)" class="suggest" data-postal="${addr.properties.postcode}" 
                    data-name="${addr.properties.name}" data-lat="${lat}" data-lon="${lon}">${addr.properties.label}</button>`
                }
            }, 1000)
        }

        const onSelectedAdresse = (ele)=>{
            //inputLon.value = ele.dataset.lon
            //inputLat.value = ele.dataset.lat
            inputPostal.value = ele.dataset.postal
            etablishmentAdresse.value = ele.dataset.name
            locationSuggest.innerHTML = null
        }

        const onTabClick = (ele)=>{
            for(const at of appointment_tabs){
                at.classList.remove("tab_selected")
            }
            ele.classList.add("tab_selected")
        }

        const onChangeNavigation = (ele)=>{
            for(const n of navigation){
                n.classList.remove("selected")
            }
            ele.classList.add("selected")
        }

        const onCreateService = (ele)=>{
            let newService = document.getElementById("new-service")
            if (!newService){
                ele.parentElement.nextElementSibling.insertAdjacentHTML("beforeend", `
                    <form class="service" id="new-service" hx-post="/etablissement/service" hx-target="#new-service" hx-swap="outerHTML" hx-ext="json-enc-custom">
	                    <div class="service-header">
	                        <h1 class="header-title">Nouveau Service</h1>
                            <div class="command">
                                <button type="submit" class="btn btn-primary">
                                    <svg class="icon" viewBox="0 0 24 24" fill="none">
                                        <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                        <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                        <g id="SVGRepo_iconCarrier"> 
                                            <path d="M3 15C3 17.8284 3 19.2426 3.87868 20.1213C4.75736 21 6.17157 21 9 21H15C17.8284 21 19.2426 21 20.1213 20.1213C21 19.2426 21 17.8284 21 15" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
                                            <path d="M12 16V3M12 3L16 7.375M12 3L8 7.375" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path> 
                                        </g>
                                    </svg>
                                </button>
                            </div>
                        </div>
		                <div class="body">
		                  <div class="form-group">
		                    <div class="field">
		                      <label for="name" class="form-label">Nom</label>
		                      <input type="text" name="name" class="form-input" id="name" autocomplete="off" />
		                    </div>
		                    <div class="doubleField">
		                        <div class="field">
		                          <label for="duration" class="form-label">Duration (min)</label>
		                          <input type="number" name="duration" class="form-input" id="duration" autocomplete="off" />
		                        </div>
		                          <div class="field">
		                            <label for="price" class="form-label">Prix</label>
		                            <input type="number" name="price" class="form-input" id="price" autocomplete="off" />
		                          </div>
		                          <div class="field">
		                            <label for="solde" class="form-label">Solde (%)</label>
		                            <input type="number" name="discount" class="form-input" id="solde" max="100" />
		                          </div>
		                        </div>
		                    </div>
		                  <div class="form-group">
		                    <label for="description" class="form-label">Description</label>
		                    <textarea id="description" maxlength="150" name="description"></textarea>
		                  </div>
		                </div>
                    </form>
                `)
                htmx.process(document.body)
            }
        }

        const onTimeChange = (ele)=>{
            const parentElement = ele.closest(".day")
            const openTime = parentElement.dataset.open
            const closeTime = parentElement.dataset.close || ''
            
            const openTimeValue = parentElement.querySelector(".ot").value
            const closeTimeValue = parentElement.querySelector(".ct").value
            
            if(openTimeValue !== openTime || closeTimeValue !== closeTime){
                parentElement.querySelector(".updateBtn").classList.remove("hidden")
            }else{
                parentElement.querySelector(".updateBtn").classList.add("hidden")
            }

        }

        const onEmployeSelected = (ele)=>{
            const email = document.querySelector("#email")
            const id = document.querySelector("#id")
            email.value = ele.innerHTML
            console.log(ele.dataset.id)
            id.value = ele.dataset.id
            ele.closest("#employe-sugg").classList.add("hidden")
        }
    </script>
{{end}}
